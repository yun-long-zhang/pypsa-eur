# SPDX-FileCopyrightText: Contributors to PyPSA-Eur <https://github.com/pypsa/pypsa-eur>
#
# SPDX-License-Identifier: CC0-1.0

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#top-level-configuration
#version: 0.13.0
version: v2025.04.0
tutorial: false

logging:
  level: INFO
  format: '%(levelname)s:%(name)s:%(message)s'

remote:
  ssh: ""
  path: ""

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#run
run:
  prefix: ""
  name: all
  #- yl-ym-ys-withnetworks-endogen-1000
  #- test-elec-no-onshore-wind
  scenarios:
    enable: true
    file: config/scenarios.yaml
  disable_progressbar: true
  shared_resources:
    policy: true
    exclude: []
      #- "resources/costs_2050.csv"
      
  shared_cutouts: true
  #use_shadow_directory: true # Set to false if problems regarding missing directories occur


# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#foresight
foresight: overnight  # options are overnight, myopic, perfect (perfect is not yet implemented)
# if you use myopic or perfect foresight, set the investment years in "planning_horizons" belo

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#scenario
# Wildcard docs in https://pypsa-eur.readthedocs.io/en/latest/wildcards.html
scenario:
  ll:
  - vopt
  clusters:
  - 39
  #- 128
  #- 256
  opts:
  - ''
  sector_opts:
  - ''
  planning_horizons:
  # - 2020
  #- 2030
  # - 2040
  - 2050

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#countries
countries: ['AL', 'AT', 'BA', 'BE', 'BG', 'CH', 'CZ', 'DE', 'DK', 'EE', 'ES', 'FI', 'FR', 'GB', 'GR', 'HR', 'HU', 'IE', 'IT', 'LT', 'LU', 'LV', 'ME', 'MK', 'NL', 'NO', 'PL', 'PT', 'RO', 'RS', 'SE', 'SI', 'SK', 'XK']
#countries: ['SE'] 5 for finland, 4 for SE
# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#snapshots
snapshots:
  start: "2013-01-01"
  end: "2014-01-01"
  inclusive: 'left'

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#enable
enable:
  retrieve: auto
  retrieve_databundle: true
  retrieve_cost_data: false
  build_cutout: false
  retrieve_cutout: true
  drop_leap_day: true

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#co2-budget
co2_budget:
  2020: 0.720 # average emissions of 2019 to 2021 relative to 1990, CO2 excl LULUCF, EEA data, European Environment Agency. (2023a). Annual European Union greenhouse gas inventory 1990–2021 and inventory report 2023 - CRF Table. https://unfccc.int/documents/627830
  2025: 0.648 # With additional measures (WAM) projection, CO2 excl LULUCF, European Environment Agency. (2023e). Member States’ greenhouse gas (GHG) emission projections 2023. https://www.eea.europa.eu/en/datahub/datahubitem-view/4b8d94a4-aed7-4e67-a54c-0623a50f48e8
  2030: 0.450 # 55% reduction by 2030 (Ff55)
  2035: 0.250
  2040: 0.100 # 90% by 2040
  2045: 0.050
  2050: -0.10

  # CO2 budget as a fraction of 1990 emissions  46Gt
# this is over-ridden if CO2Lx is set in sector_opts
# this is also over-ridden if cb is set in sector_opts

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#electricity
electricity:
  voltages: [220., 300., 330., 380., 400., 500., 750.]
  base_network: osm-prebuilt
  osm-prebuilt-version: 0.6
  gaslimit_enable: false
  gaslimit: false  #Global gas usage limit
  co2limit_enable: false  #Add an overall absolute carbon-dioxide emissions limit configured in electricity: co2limit in prepare_network. Warning: This option should currently only be used with electricity-only networks, not for sector-coupled networks.
  co2limit: 7.75e+7   #Cap on total annual system carbon dioxide emissions
  co2base: 1.487e+9   #Reference value of total annual system carbon dioxide emissions if relative emission reduction target is specified in {opts} wildcard.

  operational_reserve:
    activate: false
    epsilon_load: 0.02  #share of total load
    epsilon_vres: 0.02   #share of total renewable supply
    contingency: 4000    #fixed reserve capacity

  max_hours:
    battery: 6
    H2: 168

  extendable_carriers:
    Generator: [solar, solar-hsat, onwind, offwind-ac, offwind-dc, offwind-float, OCGT, CCGT]
    StorageUnit: [] # battery, H2
    Store: [battery, H2]
    Link: [] # H2 pipeline

  #powerplants_filter: (DateOut >= 2024 or DateOut != DateOut) and not (Country == 'Germany' and Fueltype == 'Nuclear')
  powerplants_filter: (DateOut >= 2050 or DateOut != DateOut) and not (Country in ['Germany', 'Switzerland', 'Austria', 'Belgium'] and Fueltype == 'Nuclear')
  custom_powerplants: false
  everywhere_powerplants: []

  conventional_carriers: [nuclear, oil, OCGT, CCGT, coal, lignite, geothermal, biomass]
  renewable_carriers: [solar, solar-hsat, onwind, offwind-ac, offwind-dc, offwind-float, hydro]

  estimate_renewable_capacities:  #Activate routine to estimate renewable capacities in rule add_electricity.
    enable: true
    from_gem: true
    year: 2020
    expansion_limit: false
    technology_mapping:
      Offshore: offwind-ac
      Onshore: onwind
      PV: solar

  autarky:
    enable: false  #Require each node to be autarkic by removing all lines and links.
    by_country: false  #Require each country to be autarkic by removing all cross-border lines and links. electricity: autarky must be enabled.
  transmission_limit: vopt
# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#atlite
atlite:
  cutout_directory: cutouts
  default_cutout: europe-2013-sarah3-era5
  nprocesses: 4  #Number of parallel processes in cutout preparation
  show_progress: false
  cutouts:
    # use 'base' to determine geographical bounds and time span from config
    # base:
      # module: era5
    europe-2013-sarah3-era5:
      module: [sarah, era5] # in priority order
      x: [-12., 42.]
      y: [33., 72.]
      dx: 0.3  #Grid resolution for longitude >0.25
      dy: 0.3
      time: ['2013', '2013']

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#renewable
renewable:
  onwind:
    cutout: europe-2013-sarah3-era5 #Specifies the directory where the relevant weather data ist stored.
    cutout: default
    resource:
      method: wind
      turbine: Vestas_V112_3MW
      smooth: false   #Switch to apply a gaussian kernel density smoothing to the power curve.
      add_cutout_windspeed: true
    resource_classes: 1
    capacity_per_sqkm: 1.2  #Allowable density of wind turbine placement.  NE paper
    # correction_factor: 0.93
    corine:
      grid_codes: [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32]
      distance: 1000
      distance_grid_codes: [1, 2, 3, 4, 5, 6]
    luisa: false
      # grid_codes: [1111, 1121, 1122, 1123, 1130, 1210, 1221, 1222, 1230, 1241, 1242]
      # distance: 1000
      # distance_grid_codes: [1111, 1121, 1122, 1123, 1130, 1210, 1221, 1222, 1230, 1241, 1242]
    natura: true  #Switch to exclude Natura 2000 natural protection areas. Area is excluded if true.
    excluder_resolution: 100
    clip_p_max_pu: 1.e-2
  offwind-ac:
    cutout: europe-2013-sarah3-era5
    cutout: default
    resource:
      method: wind  #Must be ‘wind’
      turbine: NREL_ReferenceTurbine_2020ATB_5.5MW #Specifies the turbine type and its characteristic power curve.
      smooth: false #Switch to apply a gaussian kernel density smoothing to the power curve.
      add_cutout_windspeed: true
    resource_classes: 1
    capacity_per_sqkm: 2  #Allowable density of wind turbine placement. ScholzPhd Tab 4.3.1: 10MW/km^2 and assuming 30% fraction of the already restricted area is available for installation of wind generators due to competing land use and likely public acceptance issues.
    correction_factor: 0.8855  #Correction factor for capacity factor time series.
    corine: [44, 255]
    luisa: false # [0, 5230]
    natura: true
    ship_threshold: 400
    max_depth: 60
    max_shore_distance: 30000
    excluder_resolution: 200 #Resolution on which to perform geographical elibility analysis.
    clip_p_max_pu: 1.e-2
    landfall_length: 10
  offwind-dc:
    cutout: europe-2013-sarah3-era5
    cutout: default
    resource:
      method: wind
      turbine: NREL_ReferenceTurbine_2020ATB_5.5MW
      smooth: false
      add_cutout_windspeed: true
    resource_classes: 1
    capacity_per_sqkm: 2
    correction_factor: 0.8855
    corine: [44, 255]
    luisa: false # [0, 5230]
    natura: true
    ship_threshold: 400
    max_depth: 60
    min_shore_distance: 30000
    excluder_resolution: 200
    clip_p_max_pu: 1.e-2
    landfall_length: 10
  offwind-float:
    cutout: europe-2013-sarah3-era5
    cutout: default
    resource:
      method: wind
      turbine: NREL_ReferenceTurbine_5MW_offshore
      smooth: false
      add_cutout_windspeed: true
    resource_classes: 1
    # ScholzPhd Tab 4.3.1: 10MW/km^2
    capacity_per_sqkm: 2
    correction_factor: 0.8855
    # proxy for wake losses
    # from 10.1016/j.energy.2018.08.153
    # until done more rigorously in #153
    corine: [44, 255]
    natura: true
    ship_threshold: 400
    excluder_resolution: 200
    min_depth: 60
    max_depth: 1000
    clip_p_max_pu: 1.e-2
    landfall_length: 10
  solar:
    cutout: europe-2013-sarah3-era5
    cutout: default
    resource:
      method: pv
      panel: CSi  #One of {‘Csi’, ‘CdTe’, ‘KANENA’} as defined in atlite . 
      orientation:
        slope: 35.  #Specifies the tilt angle (or slope) of the solar panel. A slope of zero corresponds to the face of the panel aiming directly overhead. A positive tilt angle steers the panel towards the equator.
        azimuth: 180.
    resource_classes: 1
    capacity_per_sqkm: 5.1  #Allowable density of solar panel placement.
    # correction_factor: 0.854337
    corine: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 31, 32]
    luisa: false # [1111, 1121, 1122, 1123, 1130, 1210, 1221, 1222, 1230, 1241, 1242, 1310, 1320, 1330, 1410, 1421, 1422, 2110, 2120, 2130, 2210, 2220, 2230, 2310, 2410, 2420, 3210, 3320, 3330]
    natura: true
    excluder_resolution: 100
    clip_p_max_pu: 1.e-2  #To avoid too small values in the renewables` per-unit availability time series values below this threshold are set to zero.
  solar-hsat:
    cutout: europe-2013-sarah3-era5
    cutout: default
    resource:
      method: pv
      panel: CSi  #One of {‘Csi’, ‘CdTe’, ‘KANENA’} as defined in atlite
      orientation:
        slope: 35. #Specifies the tilt angle (or slope) of the solar panel. A slope of zero corresponds to the face of the panel aiming directly overhead. A positive tilt angle steers the panel towards the equator.
        azimuth: 180. #Specifies the azimuth orientation of the solar panel. South corresponds to 180.°.
      tracking: horizontal
    resource_classes: 1
    capacity_per_sqkm: 4.43 # 15% higher land usage acc. to NREL 
    corine: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 31, 32]
    luisa: false # [1111, 1121, 1122, 1123, 1130, 1210, 1221, 1222, 1230, 1241, 1242, 1310, 1320, 1330, 1410, 1421, 1422, 2110, 2120, 2130, 2210, 2220, 2230, 2310, 2410, 2420, 3210, 3320, 3330]
    natura: true
    excluder_resolution: 100
    clip_p_max_pu: 1.e-2
  hydro:
    cutout: europe-2013-sarah3-era5
    cutout: default
    carriers: [ror, PHS, hydro]  #Specifies the types of hydro power plants to build per-unit availability time series for. ‘ror’ stands for run-of-river plants, ‘PHS’ represents pumped-hydro storage, and ‘hydro’ stands for hydroelectric dams.
    PHS_max_hours: 6 #Maximum state of charge capacity of the pumped-hydro storage (PHS) in terms of hours at full output capacity p_nom
    hydro_max_hours: "energy_capacity_totals_by_country" # one of energy_capacity_totals_by_country, estimate_by_large_installations or a float
    flatten_dispatch: false  #Consider an upper limit for the hydro dispatch. The limit is given by the average capacity factor plus the buffer given in flatten_dispatch_buffer
    flatten_dispatch_buffer: 0.2
    clip_min_inflow: 1.0
    eia_norm_year: false
    eia_correct_by_capacity: false
    eia_approximate_missing: false

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#conventional
conventional:
  unit_commitment: true  #Allow the overwrite of ramp_limit_up, ramp_limit_start_up, ramp_limit_shut_down, p_min_pu, min_up_time, min_down_time, and start_up_cost of conventional generators. Refer to the CSV file „unit_commitment.csv“.
  dynamic_fuel_price: false #Refer to the CSV file “data/validation/monthly_fuel_price.csv”.
  nuclear:
    p_max_pu: "data/nuclear_p_max_pu.csv" # float of file name

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#lines
lines:
  types:
    220.: "Al/St 240/40 2-bundle 220.0"
    300.: "Al/St 240/40 3-bundle 300.0"
    330.: "Al/St 240/40 3-bundle 300.0"
    380.: "Al/St 240/40 4-bundle 380.0"
    400.: "Al/St 240/40 4-bundle 380.0"
    500.: "Al/St 240/40 4-bundle 380.0"
    750.: "Al/St 560/50 4-bundle 750.0"
  s_max_pu: 0.7
  s_nom_max: .inf
  max_extension: 20000 #MW
  length_factor: 1.25 #Correction factor to account for the fact that buses are not connected by lines through air-line distance.
  reconnect_crimea: true #Whether to reconnect Crimea to the Ukrainian gri
  under_construction: 'keep' # 'zero': set capacity to zero, 'remove': remove, 'keep': with full capacity for lines in grid extract
  dynamic_line_rating:
    activate: false
    cutout: europe-2013-sarah3-era5
    cutout: default
    correction_factor: 0.95 #Factor to compensate for overestimation of wind speeds in hourly averaged wind data
    max_voltage_difference: false #Maximum voltage angle difference in degrees or ‘false’ to disable
    max_line_rating: false #Maximum line rating relative to nominal capacity without DLR, e.g. 1.3 or ‘false’ to disable

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#links
links:
  p_max_pu: 1.0
  p_nom_max: .inf
  max_extension: 30000 #MW
  length_factor: 1.25
  under_construction: 'keep' # 'zero': set capacity to zero, 'remove': remove, 'keep': with full capacity for lines in grid extract

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#transmission_projects
transmission_projects:
  enable: true
  include:
    tyndp2020: true
    nep: true
    manual: true
  skip:
  - upgraded_lines
  - upgraded_links
  status:
  - under_construction
  - in_permitting
  - confirmed
    #- planned_not_yet_permitted
    #- under_consideration
  new_link_capacity: 'keep' #keep or zero   Whether to set the new link capacity to the provided capacity or set it to zero.

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#transformers
transformers:
  x: 0.1
  s_nom: 2000.
  type: ''

# docs-load in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#load
load:
  interpolate_limit: 3 #Maximum gap size (consecutive nans) which interpolated linearly.
  time_shift_for_large_gaps: 1w #Periods which are used for copying time-slices in order to fill large gaps of nans
  manual_adjustments: true # false
  scaling_factor: 1.0 #Global correction factor for the load time series.
  fixed_year: false # false or year (e.g. 2013)
  supplement_synthetic: true #Whether to supplement missing data for selected time period should be supplemented by synthetic data from https://zenodo.org/records/10820928.
  distribution_key:
    gdp: 0.6
    population: 0.4

# docs
# TODO: PyPSA-Eur merge issue in prepare_sector_network.py
# regulate what components with which carriers are kept from PyPSA-Eur;
# some technologies are removed because they are implemented differently
# (e.g. battery or H2 storage) or have different year-dependent costs
# in PyPSA-Eur-Sec
pypsa_eur:
  Bus:
  - AC
  Link:
  - DC
  Generator:
  - onwind
  - offwind-ac
  - offwind-dc
  - offwind-float
  - solar-hsat
  - solar
  - ror
  - nuclear
  StorageUnit:
  - PHS
  - hydro
  Store: []

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#energy
energy:
  energy_totals_year: 2019 #The year for the sector energy use. The year must be avaliable in the Eurostat report
  base_emissions_year: 1990
  emissions: CO2 #{CO2, All greenhouse gases - (CO2 equivalent)}

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#biomass
biomass:
  year: 2050 #Year for which to retrieve biomass potential according to the assumptions of the JRC ENSPRESO .{2010, 2020, 2030, 2040, 2050}
  scenario: ENS_Med #{“ENS_Low”, “ENS_Med”, “ENS_High”}
  classes:
    solid biomass:
    - Agricultural waste
    - Fuelwood residues
    - Secondary Forestry residues - woodchips
    - Sawdust
    - Residues from landscape care
    not included:
    - Sugar from sugar beet
    - Rape seed
    - "Sunflower, soya seed "
    - Bioethanol barley, wheat, grain maize, oats, other cereals and rye
    - Miscanthus, switchgrass, RCG
    - Willow
    - Poplar
    - FuelwoodRW
    - C&P_RW
    biogas:
    - Manure solid, liquid
    - Sludge
    municipal solid waste:
    - Municipal waste
  share_unsustainable_use_retained: #Share of unsustainable biomass use retained using primary production of Eurostat data as reference
    2020: 1
    2025: 0.66
    2030: 0.33
    2035: 0
    2040: 0
    2045: 0
    2050: 0
  share_sustainable_potential_available:
    2020: 0
    2025: 0.33
    2030: 0.66
    2035: 1
    2040: 1
    2045: 1
    2050: 1


# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#solar-thermal
solar_thermal:
  clearsky_model: simple  # should be "simple" or "enhanced"?
  orientation:
    slope: 45.
    azimuth: 180.
  cutout: default

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#existing-capacities
existing_capacities: #Only used for sector-coupling studies. The value for grouping years are only used in myopic or perfect foresight scenarios.
  grouping_years_power: [1920, 1950, 1955, 1960, 1965, 1970, 1975, 1980, 1985, 1990, 1995, 2000, 2005, 2010, 2015, 2020, 2025]
  grouping_years_heat: [1980, 1985, 1990, 1995, 2000, 2005, 2010, 2015, 2019] # heat grouping years >= baseyear will be ignored
  threshold_capacity: 10 #Capacities generators and links of below threshold are removed during add_existing_capacities
  default_heating_lifetime: 20  #Default lifetime for heating technologies
  conventional_carriers:
  - lignite
  - coal
  - oil
  - uranium

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#sector
sector:
  transport: true
  heating: true
  biomass: true
  industry: true
  shipping: true
  aviation: true
  agriculture: true
  fossil_fuels: true
  district_heating:
    potential: 0.6    #maximum fraction of urban demand which can be supplied by district heating
    # progress = 0 means today's district heating share, progress = 1 means maximum fraction of urban demand is supplied by district heating
    progress: #0.5?
      2020: 0.0
      2025: 0.15
      2030: 0.3
      2035: 0.45
      2040: 0.6
      2045: 0.8
      2050: 1.0
    district_heating_loss: 0.15
    supply_temperature_approximation:
      max_forward_temperature_baseyear:
        FR: 110
        DK: 75
        DE: 109
        CZ: 130
        FI: 115
        PL: 130
        SE: 102
        IT: 90
      min_forward_temperature_baseyear:
        DE: 82
      return_temperature_baseyear:
        DE: 58
      lower_threshold_ambient_temperature: 0
      upper_threshold_ambient_temperature: 10
      rolling_window_ambient_temperature: 72
      relative_annual_temperature_reduction: 0.01
    ptes:
      dynamic_capacity: true
      max_top_temperature: 90
      min_bottom_temperature: 35
    heat_source_cooling: 6 #K
    heat_pump_cop_approximation:
      refrigerant: ammonia
      heat_exchanger_pinch_point_temperature_difference: 5 #K
      isentropic_compressor_efficiency: 0.8
      heat_loss: 0.0
    limited_heat_sources:
      geothermal:
        # activate for 85C hydrothermal
        # key: hydrothermal_85  #file names in Fordatis <https://fordatis.fraunhofer.de/handle/fordatis/341.3?mode=simple>
        # constant_temperature_celsius: 85
        key: hydrothermal_65 #Name of the heat source. Must be the same as in heat_pump_sources
        constant_temperature_celsius: 65
        column_name: Energy_TWh
        unit: TWh
        full_load_hours: 4000 #assumed full-load hours in Manz et al. (used to scale from utilisation to technical potential)
        ignore_missing_regions: false
    direct_utilisation_heat_sources:
    - geothermal
  heat_pump_sources:
    urban central:
    - air
    urban decentral:
    - air
    rural:
    - air
    - ground
  cluster_heat_buses: true
  heat_demand_cutout: default
  bev_dsm_restriction_value: 0.75  #Set to 0 for no restriction on BEV DSM
  bev_dsm_restriction_time: 7  #Time at which SOC of BEV has to be dsm_restriction_value
  transport_heating_deadband_upper: 20.
  transport_heating_deadband_lower: 15.
  ICE_lower_degree_factor: 0.375  #in per cent increase in fuel consumption per degree above deadband
  ICE_upper_degree_factor: 1.6
  EV_lower_degree_factor: 0.98
  EV_upper_degree_factor: 0.63
  bev_dsm: true  #turns on EV battery
  bev_dsm_availability: 0.5  #How many cars do smart charging
  bev_energy: 0.05  #average battery size in MWh
  bev_charge_efficiency: 0.9  #BEV (dis-)charging efficiency
  bev_charge_rate: 0.011  #3-phase charger with 11 kW
  bev_avail_max: 0.95
  bev_avail_mean: 0.8
  v2g: true #Allows feed-in to grid from EV battery. 
  #This is only enabled if BEV demand-side management is enabled, and the share of vehicles participating is V2G is given by bev_dsm_availability.
  land_transport_fuel_cell_share:  # 1 means all FCEVs
    2020: 0
    2025: 0
    2030: 0
    2035: 0
    2040: 0
    2045: 0
    2050: 0
  land_transport_electric_share:  # 1 means all EVs
    2020: 0
    2025: 0.15
    2030: 0.3
    2035: 0.45
    2040: 0.7
    2045: 0.85
    2050: 1
  land_transport_ice_share:  #internal combustion engine (ICE) 
    2020: 1
    2025: 0.85
    2030: 0.7
    2035: 0.55
    2040: 0.3
    2045: 0.15
    2050: 0
  transport_electric_efficiency: 53.19 # 1 MWh_el = 53.19*100 km
  transport_fuel_cell_efficiency: 30.003 # 1 MWh_H2 = 30.003*100 km
  transport_ice_efficiency: 16.0712 # 1 MWh_oil = 16.0712 * 100 km
  agriculture_machinery_electric_share: 0
  agriculture_machinery_oil_share: 1
  agriculture_machinery_fuel_efficiency: 0.7
  agriculture_machinery_electric_efficiency: 0.3
  MWh_MeOH_per_MWh_H2: 0.8787
  MWh_MeOH_per_tCO2: 4.0321
  MWh_MeOH_per_MWh_e: 3.6907
  shipping_hydrogen_liquefaction: true  # whether to consider liquefaction costs for shipping H2 demands
  shipping_hydrogen_share: #if there is a share, li
    2020: 0
    2025: 0
    2030: 0
    2035: 0
    2040: 0
    2045: 0
    2050: 0.1
  shipping_methanol_share:
    2020: 0
    2025: 0.15
    2030: 0.3
    2035: 0.5
    2040: 0.7
    2045: 0.85
    2050: 0.9
  shipping_oil_share:
    2020: 1
    2025: 0.85
    2030: 0.7
    2035: 0.5
    2040: 0.3
    2045: 0.15
    2050: 0
  shipping_methanol_efficiency: 0.46
  shipping_oil_efficiency: 0.40
  aviation_demand_factor: 1.7 #The proportion of demand for aviation compared to today’s consumption
  HVC_demand_factor: 1.  #The proportion of demand for high-value chemicals compared to today’s consumption
  time_dep_hp_cop: true
  heat_pump_sink_T_individual_heating: 55.
  reduce_space_heat_exogenously: true
  reduce_space_heat_exogenously_factor:
    2020: 0.10  # this results in a space heat demand reduction of 10%
    2025: 0.09  # first heat demand increases compared to 2020 because of larger floor area per capita
    2030: 0.09
    2035: 0.11
    2040: 0.16
    2045: 0.21
    2050: 0.29
  retrofitting:
    retro_endogen: false #Add retrofitting as an endogenous system which co-optimise space heat savings.
    cost_factor: 1.0
    interest_rate: 0.04
    annualise_cost: true #Annualise the investment costs of retrofitting
    tax_weighting: false #Weight the costs of retrofitting depending on taxes in countries
    construction_index: true #Weight the costs of retrofitting depending on labour/material costs per country
  tes: true   #Add option for storing thermal energy in large water pits associated with district heating systems and individual thermal energy storage (TES)
  tes_tau:   # 180 day time constant for centralised, 3 day for decentralised, The time constant used to calculate the decay of thermal energy in thermal energy storage (TES): 1-e^(-1/24pi)
    decentral: 3
    central: 180
  boilers: true #Add option for transforming gas into heat using gas boilers
  resistive_heaters: true
  oil_boilers: true #Add option for transforming oil into heat using boilers
  biomass_boiler: true
  overdimension_heat_generators:
    decentral: 1.1  #to cover demand peaks bigger than data
    central: 1.0
  chp:
    enable: true  #Currently possible are “gas”, “oil”, “methanol”, “lignite”, “coal” as well as “solid biomass”.
    fuel:
    - solid biomass # For solid biomass, CHP with and without CC are added
    - gas # For all other fuels the same techno economic data from gas CHP is taken
    micro_chp: false # Only gas is used for micro_chp
  solar_thermal: true   #Add option for using solar thermal to generate heat.
  solar_cf_correction: 0.788457  # =  >>> 1/1.2683  The correction factor for the value provided by the solar thermal profile calculations
  #marginal_cost_storage: 0. #1e-4  currency/MWh  The marginal cost of discharging batteries in distributed grids
  methanation: true #Add option for transforming hydrogen and CO2 into methane using methanation.
  coal_cc: false  #Add option for coal CHPs with carbon capture
  dac: true #Add option for Direct Air Capture (DAC)
  co2_vent: true  #Add option for vent out CO2 from storages to the atmosphere.
  heat_vent:
    urban central: true
    urban decentral: true
    rural: true
  marginal_cost_heat_vent: 0.02
  
  allam_cycle_gas: false #Add option to include Allam cycle gas power plants
  hydrogen_fuel_cell: true #Add option to include hydrogen fuel cell for re-electrification
  hydrogen_turbine: false   #Add option to include hydrogen turbine for re-electrification. Assuming OCGT technology costs
  SMR: true  #Add option for transforming natural gas into hydrogen and CO2 using Steam Methane Reforming (SMR)
  SMR_cc: true
  regional_oil_demand: true  #Spatially resolve oil demand. Set to true if regional CO2 constraints needed.
  regional_coal_demand: false
  regional_co2_sequestration_potential:  #Add option for regionally-resolved geological carbon dioxide sequestration potentials based on CO2StoP.
    enable: true
    attribute:
    - conservative estimate Mt
    - conservative estimate GAS Mt
    - conservative estimate OIL Mt
    - conservative estimate aquifer Mt
    include_onshore: true
    min_size: 3 #Any sites with lower potential than this value will be excluded
    max_size: 25 #The maximum sequestration potential for any one site.
    years_of_storage: 25
  co2_sequestration_potential: #The potential of sequestering CO2 in Europe per year and investment period
    2020: 0
    2025: 0
    2030: 50
    2035: 100
    2040: 200
    2045: 200
    2050: 600
  co2_sequestration_cost: 10  #EUR/tCO2 for transport and sequestration of CO2
  co2_sequestration_lifetime: 50  #The lifetime of a CO2 sequestration site
  cc_fraction: 0.9 #The default fraction of CO2 captured with post-combustion capture
  hydrogen_underground_storage: true  #Add options for storing hydrogen underground. Storage potential depends regionally.
  hydrogen_underground_storage_locations:
    # - onshore  # more than 50 km from sea
  - nearshore    # within 50 km of sea
    # - offshore
  methanol: #Add methanol as carrrier and add enabled methnol technologies
    regional_methanol_demand: true  #Spatially resolve methanol demand. Set to true if regional CO2 constraints needed.
    methanol_reforming: true
    methanol_reforming_cc: true
    methanol_to_kerosene: true
    methanol_to_power:
      ccgt: true   #Add combined cycle gas turbine (CCGT) using methanol
      ccgt_cc: true
      ocgt: true  #Add open cycle gas turbine (OCGT) using methanol
      allam: true  #Add Allam cycle gas power plants using methanol
    biomass_to_methanol: true
    biomass_to_methanol_cc: true
    e_biomethanol: false
  H2_network: true
  H2_retrofit: false  # if set to True existing gas pipes can be retrofitted to H2 pipes
  # according to hydrogen backbone strategy (April, 2020) p.15
  # https://gasforclimate2050.eu/wp-content/uploads/2020/07/2020_European-Hydrogen-Backbone_Report.pdf
  # 60% of original natural gas capacity could be used in cost-optimal case as H2 capacity
  electrobiofuels: false
  e_bioSNG: false
  co2_spatial: true  #Add option to spatially resolve carrier representing stored carbon dioxide. 
  #This allows for more detailed modelling of CCUTS, e.g. regarding the capturing of industrial process emissions, 
  #usage as feedstock for electrofuels, transport of carbon dioxide, and geological sequestration sites.
  co2_network: true     #Add option for planning a new carbon dioxide transmission network
  co2_network_cost_factor: 1 #The cost factor for the capital cost of the carbon dioxide transmission network
  
  ammonia: true  # can be false (no NH3 carrier), true (copperplated NH3), "regional" (regionalised NH3 without network)
  min_part_load_fischer_tropsch: 0.5  #The minimum unit dispatch (p_min_pu) for the Fischer-Tropsch process
  min_part_load_methanolisation: 0.3 #The minimum unit dispatch (p_min_pu) for the methanolisation process
  min_part_load_methanation: 0.3
  use_fischer_tropsch_waste_heat: 0.25 #Add option for using waste heat of Fischer Tropsch in district heating networks
  use_haber_bosch_waste_heat: 0.25
  use_methanolisation_waste_heat: 0.25
  use_methanation_waste_heat: 0.25
  use_fuel_cell_waste_heat: 0.25
  use_electrolysis_waste_heat: 0.25
  electricity_transmission_grid: true
  electricity_distribution_grid: true
  electricity_grid_connection: true
  transmission_efficiency: #Section to specify transmission losses or compression energy demands of bidirectional links.
    enable:
    - DC
    - H2 pipeline
    - gas pipeline
    - electricity distribution grid
    DC:
      efficiency_static: 0.98  #Length-independent transmission efficiency.
      efficiency_per_1000km: 0.977  #Length-dependent transmission efficiency 
    H2 pipeline:
      efficiency_per_1000km: 1 # 0.982
      compression_per_1000km: 0.018 #electricity demand for compression ($eta cdot text{length}$) 
    gas pipeline:
      efficiency_per_1000km: 1 #0.977
      compression_per_1000km: 0.01
    electricity distribution grid:
      efficiency_static: 0.97
  
  gas_network: true #Add existing natural gas infrastructure, incl. LNG terminals, production and entry-points.
                    #When activated, all the gas demands are regionally disaggregated as well.
  H2_retrofit_capacity_per_CH4: 0.6  #The ratio for H2 capacity per original CH4 capacity of retrofitted pipelines. European Hydrogen Backbone (April, 2020) p.15 
  gas_network_connectivity_upgrade: 1 #The number of desired edge connectivity (k) in the length-weighted k-edge augmentation algorithm used for the gas network
  gas_distribution_grid: true
  gas_distribution_grid_cost_factor: 1.0   #multiplies cost in data/costs.csv
  biomass_spatial: true  #Add option for resolving biomass demand regionally
  biomass_transport: true  #Add option for transporting solid biomass between nodes
  biomass_transport_costs_file: "resources/biomass_transport_costs.csv"
  biogas_upgrading_cc: true
  conventional_generation:  #a more detailed description of conventional carriers to detemine fuel consumption
    OCGT: gas
    CCGT: gas
    coal: coal
    oil: oil
    lignite: lignite
    nuclear: uranium
  industry_t:  # heat supply industry
    endogen: true  # if heat supply for industry should be enodgenously optimised
    must_run: 0.8 # NB: industrial heat demand is in reality supplied at site by discrete plants
    # which follow the local demand and therefore cannot be dispatched too much.
    # Thus, p_min_pu is set to must run to avoid too much dispatch behaviour. Improvements welcome!
    # share of medium and high temperature for process heat based on EU27 Fig. 5 https://www.agora-industry.org/publications/direct-electrification-of-industrial-process-heat
    # TODO: should be improved and split up by country and sector
    share_medium: 0.42
    share_high: 0.57
    # Options in case of endogenous industry heat supply
    low_T:
      biomass: true
      heat_pumps: true
      electric_boiler: true
      methane: true
    medium_T:
      biomass: true
      methane: true
      hydrogen: true
    high_T:
      hydrogen: true
      methane: true  
  biomass_to_liquid: true #Add option for transforming solid biomass into liquid fuel with the same properties as oil
  biomass_to_liquid_cc: true
  
  biosng: true #Add option for transforming solid biomass into synthesis gas with the same properties as natural gas
  biosng_cc: true
  bioH2: true #Add option for transforming solid biomass into hydrogen with carbon capture
  municipal_solid_waste: true
  limit_max_growth:
    enable: true  #Add option to limit the maximum growth of a carrier
    # allowing 30% larger than max historic growth
    factor: 1.3
    max_growth:  # unit GW/a
      onwind: 16 # onshore max grow so far(2022) 16 GW in Europe https://www.iea.org/reports/renewables-2020/wind
      solar: 28 # solar max grow so far 28 GW in Europe https://www.iea.org/reports/renewables-2020/solar-pv
      offwind-ac: 35 # offshore max grow so far 3.5 GW in Europe https://windeurope.org/about-wind/statistics/offshore/european-offshore-wind-industry-key-trends-statistics-2019/
      offwind-dc: 35
    max_relative_growth: #The historic maximum relative growth of a carrier  *100%
      onwind: 3
      solar: 3
      offwind-ac: 3
      offwind-dc: 3
  enhanced_geothermal:
    enable: false
    flexible: true
    max_hours: 240
    max_boost: 0.25
    var_cf: true
    sustainability_factor: 0.0025
  solid_biomass_import:
    enable: true
    price: 54 #EUR/MWh
    max_amount: 1390 # TWh
    upstream_emissions_factor: .0 #.1 #share of solid biomass CO2 emissions at full combustion Upstream emissions of solid biomass imports
  imports:
    enable: false
    limit: .inf
    limit_sense: <=
    price:
      H2: 74
      NH3: 97
      methanol: 121
      gas: 122
      oil: 125


# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#industry
industry:
  St_primary_fraction: #The fraction of steel produced via primary route versus secondary route (scrap+EAF). Current fraction is 0.6
    2020: 0.6
    2025: 0.55
    2030: 0.5
    2035: 0.45
    2040: 0.4
    2045: 0.35
    2050: 0.3
  DRI_fraction:
    2020: 0
    2025: 0
    2030: 0.05
    2035: 0.2
    2040: 0.4
    2045: 0.7
    2050: 1
  H2_DRI: 1.7 #The hydrogen consumption in Direct Reduced Iron (DRI) Mwh_H2 LHV/ton_Steel from 51kgH2/tSt in Vogl et al (2018)
  elec_DRI: 0.322 # MWh/tSt  The electricity consumed in Direct Reduced Iron (DRI) shaft. From HYBRIT brochure
  Al_primary_fraction: #The fraction of aluminium produced via the primary route versus scrap. Current fraction is 0.4
    2020: 0.4
    2025: 0.375
    2030: 0.35
    2035: 0.325
    2040: 0.3
    2045: 0.25
    2050: 0.2
  MWh_NH3_per_tNH3: 5.166  #The energy amount per ton of ammonia.
  MWh_CH4_per_tNH3_SMR: 10.8 #The energy amount of methane needed to produce a ton of ammonia using steam methane reforming (SMR). 
  MWh_elec_per_tNH3_SMR: 0.7 #  electricity
  MWh_H2_per_tNH3_electrolysis: 5.93  #The energy amount of hydrogen needed to produce a ton of ammonia using Haber–Bosch process. 
  MWh_elec_per_tNH3_electrolysis: 0.2473
  MWh_NH3_per_MWh_H2_cracker: 1.46 # The energy amount of amonia needed to produce an energy amount hydrogen using ammonia cracker  https://github.com/euronion/trace/blob/44a5ff8401762edbef80eff9cfe5a47c8d3c8be4/data/efficiencies.csv
  NH3_process_emissions: 24.5 #the emission of ammonia production from steam methane reforming (SMR). From UNFCCC for 2015 for EU28
  petrochemical_process_emissions: 25.5 #Mt CO2/a  The emission of petrochemical production. From UNFCCC for 2015 for EU28
  #HVC primary/recycling based on values used in Neumann et al https://doi.org/10.1016/j.joule.2023.06.016, linearly interpolated between 2020 and 2050
  #2020 recycling rates based on Agora https://static.agora-energiewende.de/fileadmin/Projekte/2021/2021_02_EU_CEAP/A-EW_254_Mobilising-circular-economy_study_WEB.pdf
  #fractions refer to the total primary HVC production in 2020
  #assumes 6.7 Mtplastics produced from recycling in 2020
  HVC_primary_fraction:
    2020: 1.0
    2025: 0.9
    2030: 0.8
    2035: 0.7
    2040: 0.6
    2045: 0.5
    2050: 0.4
  HVC_mechanical_recycling_fraction:
    2020: 0.12
    2025: 0.15
    2030: 0.18
    2035: 0.21
    2040: 0.24
    2045: 0.27
    2050: 0.30
  HVC_chemical_recycling_fraction:
    2020: 0.0
    2025: 0.0
    2030: 0.04
    2035: 0.08
    2040: 0.12
    2045: 0.16
    2050: 0.20
  HVC_environment_sequestration_fraction: 0. #The fraction of high value chemicals (HVC) put into landfill resulting in additional carbon sequestration. 
  waste_to_energy: true #Switch to enable expansion of waste to energy CHPs for conversion of plastics. 
  waste_to_energy_cc: true
  sector_ratios_fraction_future: #The fraction of total progress in fuel and process switching achieved in the industry sector.
    2020: 0.0
    2025: 0.1
    2030: 0.3
    2035: 0.5
    2040: 0.7
    2045: 0.9
    2050: 1.0
  basic_chemicals_without_NH3_production_today: 69. #Mt/a, = 86 Mtethylene-equiv - 17 MtNH3  The amount of basic chemicals produced without ammonia
  HVC_production_today: 52.
  MWh_elec_per_tHVC_mechanical_recycling: 0.547
  MWh_elec_per_tHVC_chemical_recycling: 6.9
  chlorine_production_today: 9.58
  MWh_elec_per_tCl: 3.6
  MWh_H2_per_tCl: -0.9372
  methanol_production_today: 1.5
  MWh_elec_per_tMeOH: 0.167
  MWh_CH4_per_tMeOH: 10.25
  MWh_MeOH_per_tMeOH: 5.528
  hotmaps_locate_missing: false #Locate industrial sites without valid locations based on city and countries.
  reference_year: 2019
  oil_refining_emissions: 0.013 #tCO2/MWh the emissions from oil fuel processing (e.g. oil in petrochemical refinieries)


# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#costs
costs:
  file: "resources/costs_2050.csv"  # 2 Update this to your specific cost file path
  year: 2050
  version: v0.11.0 #vX.X.X or <user>/<repo>/vX.X.X; e.g. ‘v0.5.0’
  #Version of technology-data repository to use. If this string is of the form <user>/<repo>/<version> 
  #then costs are instead retrieved from github.com/<user>/<repo> at the <version> tag.
  social_discountrate: 0.02 #Social discount rate to compare costs in different investment periods. 0.02 corresponds to a social discount rate of 2%.
  fill_values: #Default values if not specified for a technology in resources/costs.csv
    FOM: 0
    VOM: 0
    efficiency: 1
    fuel: 0
    investment: 0
    lifetime: 25
    "CO2 intensity": 0
    "discount rate": 0.07
  # Marginal and capital costs can be overwritten EUR/MW  EUR/MWh
  # capital_cost:
  #   onwind: 500  #keys should be in the ‘technology’ column
  overwrites: {}
  marginal_cost:
    solar: 0.01
    onwind: 0.015
    offwind: 0.015
    hydro: 0.
    H2: 0.
    electrolysis: 0.
    fuel cell: 0.
    battery: 0.
    battery inverter: 0.
    home battery storage: 0
    water tank charger: 0.03
    central water pit charger: 0.025
  
  emission_prices:
    enable: false
    co2: 0.
    co2_monthly_prices: false

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#clustering
clustering:
  mode: busmap
  administrative:
    level: 1
  focus_weights: false #Optionally specify the focus weights for the clustering of countries. For instance: DE: 0.8 will distribute 80% of all nodes to Germany and 20% to the rest of the countries.
  simplify_network:
    to_substations: false #Aggregates all nodes without power injection (positive or negative, i.e. demand or generation) to electrically closest ones
    remove_stubs: true
    remove_stubs_across_borders: false
  cluster_network:
    algorithm: kmeans
    hac_features:
    - wnd100m
    - influx_direct
  exclude_carriers: []  #List of carriers which will not be aggregated. If empty, all carriers will be aggregated.
  consider_efficiency_classes: false
  aggregation_strategies: # if sum, then all values within each cluster are summed to represent the new bus.
    generators:
      committable: any9
      ramp_limit_up: max #one of {min, max, sum
      ramp_limit_down: max
  temporal: #{false,``nH``; i.e. 2H-6H}
    resolution_elec: false
    resolution_sector: 50H

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#adjustments
adjustments: #Multiply original value with given factor
  electricity: false
  sector:
    factor:
      Link:
        electricity distribution grid:
          capital_cost: 1.0
    absolute: false

# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#solving
solving:
  #tmpdir: "path/to/tmp"
  options:
    clip_p_max_pu: 1.e-2
    load_shedding: false
    curtailment_mode: false
    noisy_costs: true  #Add random noise to marginal cost of generators by u(0.009,0.011)and capital cost of lines and links by u(0.09,0.11)
    skip_iterations: true
    rolling_horizon: false
    seed: 123
    custom_extra_functionality: "../data/custom_extra_functionality.py"
    # io_api: "direct"  # Increases performance but only supported for the highs and gurobi solvers
    # options that go into the optimize function
    track_iterations: false
    min_iterations: 2
    max_iterations: 3
    transmission_losses: 2
    linearized_unit_commitment: true #Whether to optimise using the linearized unit commitment formulation.
    horizon: 365
    post_discretization:
      enable: false
      line_unit_size: 1700
      line_threshold: 0.3
      link_unit_size:
        DC: 2000
        H2 pipeline: 1200
        gas pipeline: 1500
      link_threshold:
        DC: 0.3
        H2 pipeline: 0.3
        gas pipeline: 0.3
      fractional_last_unit_size: false
    keep_files: false
    model_kwargs:
      solver_dir: "/tmp"

  agg_p_nom_limits:
    agg_offwind: false  #Aggregate together all the types of offwind when writing the constraint. Default is false.
    include_existing: false #Take existing capacities into account when writing the constraint. 
    file: data/agg_p_nom_minmax.csv

  constraints:
    CCL: false #Add minimum and maximum levels of generator nominal capacity per carrier for individual countries. These can be specified in the file linked at electricity: agg_p_nom_limits in the configuration. File defaults to data/agg_p_nom_minmax.csv.
    EQ: false #0.5-0.7  Require each country or node to on average produce a minimal share of its total consumption itself.
    BAU: false #Add a per-carrier minimal overall capacity; i.e. at least 40GW of OCGT in Europe; configured in electricity: BAU_mincapacities
    SAFE: false #Add a capacity reserve margin of a certain fraction above the peak demand to which renewable generators and storage do not contribute. 

  solver:
    name: gurobi
    options: gurobi-default

  solver_options:
    highs-default:
      # refer to https://ergo-code.github.io/HiGHS/dev/options/definitions/
      threads: 1
      solver: "ipm"
      run_crossover: "off"
      small_matrix_value: 1e-6
      large_matrix_value: 1e9
      primal_feasibility_tolerance: 1e-5
      dual_feasibility_tolerance: 1e-5
      ipm_optimality_tolerance: 1e-4
      parallel: "on"
      random_seed: 123
    highs-simplex:
      solver: "simplex"
      parallel: "on"
      primal_feasibility_tolerance: 1e-5
      dual_feasibility_tolerance: 1e-5
      random_seed: 123
    gurobi-default:
      threads: 8
      method: 2 # barrier
      crossover: 0
      BarConvTol: 1.e-6
      Seed: 123
      AggFill: 0
      PreDual: 0
      GURO_PAR_BARDENSETHRESH: 200
    gurobi-numeric-focus:
      NumericFocus: 3       # Favour numeric stability over speed
      method: 2             # barrier
      crossover: 0          # do not use crossover
      BarHomogeneous: 1     # Use homogeneous barrier if standard does not converge
      BarConvTol: 1.e-5
      FeasibilityTol: 1.e-4
      OptimalityTol: 1.e-4
      ObjScale: -0.5
      threads: 8
      Seed: 123
    gurobi-fallback:        # Use gurobi defaults
      crossover: 0
      method: 2             # barrier
      BarHomogeneous: 1     # Use homogeneous barrier if standard does not converge
      BarConvTol: 1.e-5
      FeasibilityTol: 1.e-5
      OptimalityTol: 1.e-5
      Seed: 123
      threads: 8
    cplex-default:
      threads: 4
      lpmethod: 4 # barrier
      solutiontype: 2 # non basic solution, ie no crossover
      barrier.convergetol: 1.e-5
      feasopt.tolerance: 1.e-6
    copt-default:
      Threads: 8
      LpMethod: 2
      Crossover: 0
      RelGap: 1.e-6
      Dualize: 0
    copt-gpu:
      LpMethod: 6
      GPUMode: 1
      PDLPTol: 1.e-5
      Crossover: 0
    cbc-default: {} # Used in CI
    glpk-default: {} # Used in CI
  check_objective:
    enable: false
    expected_value: None
    atol: 1_000_000
    rtol: 0.01

  mem_mb: 30000 #memory in MB; 20 GB enough for 50+B+I+H2; 100 GB for 181+B+I+H2
  memory_logging_frequency: 30 # in seconds
  runtime: 6h #runtime in humanfriendly style https://humanfriendly.readthedocs.io/en/latest/


# docs in https://pypsa-eur.readthedocs.io/en/latest/configuration.html#plotting
# plotting:
#   map:
#     boundaries: [-11, 30, 34, 71]
#     color_geomap:
#       ocean: white
#       land: white
#   projection:
#     name: "EqualEarth"
#     # See https://scitools.org.uk/cartopy/docs/latest/reference/projections.html for alternatives, for example:
#     # name: "LambertConformal"
#     # central_longitude: 10.
#     # central_latitude: 50.
#     # standard_parallels: [35, 65]
#   eu_node_location:
#     x: -5.5
#     y: 46.
#   costs_max: 1000
#   costs_threshold: 1
#   energy_max: 20000
#   energy_min: -20000
#   energy_threshold: 50.

#   nice_names:
#     OCGT: "Open-Cycle Gas"
#     CCGT: "Combined-Cycle Gas"
#     offwind-ac: "Offshore Wind (AC)"
#     offwind-dc: "Offshore Wind (DC)"
#     offwind-float: "Offshore Wind (Floating)"
#     onwind: "Onshore Wind"
#     solar: "Solar"
#     PHS: "Pumped Hydro Storage"
#     hydro: "Reservoir & Dam"
#     battery: "Battery Storage"
#     H2: "Hydrogen Storage"
#     lines: "Transmission Lines"
#     ror: "Run of River"
#     load: "Load Shedding"
#     ac: "AC"
#     dc: "DC"

#   tech_colors:
#     # wind
#     onwind: "#235ebc"
#     onshore wind: "#235ebc"
#     offwind: "#6895dd"
#     offshore wind: "#6895dd"
#     offwind-ac: "#6895dd"
#     offshore wind (AC): "#6895dd"
#     offshore wind ac: "#6895dd"
#     offwind-dc: "#74c6f2"
#     offshore wind (DC): "#74c6f2"
#     offshore wind dc: "#74c6f2"
#     offwind-float: "#b5e2fa"
#     offshore wind (Float): "#b5e2fa"
#     offshore wind float: "#b5e2fa"
#     # water
#     hydro: '#298c81'
#     hydro reservoir: '#298c81'
#     ror: '#3dbfb0'
#     run of river: '#3dbfb0'
#     hydroelectricity: '#298c81'
#     PHS: '#51dbcc'
#     hydro+PHS: "#08ad97"
#     # solar
#     solar: "#f9d002"
#     solar PV: "#f9d002"
#     solar-hsat: "#fdb915"
#     solar thermal: '#ffbf2b'
#     residential rural solar thermal: '#f1c069'
#     services rural solar thermal: '#eabf61'
#     residential urban decentral solar thermal: '#e5bc5a'
#     services urban decentral solar thermal: '#dfb953'
#     urban central solar thermal: '#d7b24c'
#     solar rooftop: '#ffea80'
#     # gas
#     OCGT: '#e0986c'
#     OCGT marginal: '#e0986c'
#     OCGT-heat: '#e0986c'
#     gas boiler: '#db6a25'
#     gas boilers: '#db6a25'
#     gas boiler marginal: '#db6a25'
#     residential rural gas boiler: '#d4722e'
#     residential urban decentral gas boiler: '#cb7a36'
#     services rural gas boiler: '#c4813f'
#     services urban decentral gas boiler: '#ba8947'
#     urban central gas boiler: '#b0904f'
#     gas: '#e05b09'
#     fossil gas: '#e05b09'
#     natural gas: '#e05b09'
#     biogas to gas: '#e36311'
#     biogas to gas CC: '#e51245'
#     CCGT: '#a85522'
#     CCGT marginal: '#a85522'
#     allam: '#B98F76'
#     gas for industry co2 to atmosphere: '#692e0a'
#     gas for industry co2 to stored: '#8a3400'
#     gas for industry: '#853403'
#     gas for industry CC: '#5b2809'
#     gas pipeline: '#ebbca0'
#     gas pipeline new: '#a87c62'
#     # oil
#     oil: '#c9c9c9'
#     oil primary: '#d2d2d2'
#     oil refining: '#e6e6e6'
#     imported oil: '#a3a3a3'
#     oil boiler: '#adadad'
#     residential rural oil boiler: '#a9a9a9'
#     services rural oil boiler: '#a5a5a5'
#     residential urban decentral oil boiler: '#a1a1a1'
#     urban central oil boiler: '#9d9d9d'
#     services urban decentral oil boiler: '#999999'
#     agriculture machinery oil: '#949494'
#     shipping oil: "#808080"
#     land transport oil: '#afafaf'
#     # nuclear
#     Nuclear: '#ff8c00'
#     Nuclear marginal: '#ff8c00'
#     nuclear: '#ff8c00'
#     uranium: '#ff8c00'
#     # coal
#     Coal: '#545454'
#     coal: '#545454'
#     Coal marginal: '#545454'
#     coal for industry: '#343434'
#     solid: '#545454'
#     Lignite: '#826837'
#     lignite: '#826837'
#     Lignite marginal: '#826837'
#     # biomass
#     biogas: '#e3d37d'
#     biomass: '#baa741'
#     solid biomass: '#baa741'
#     municipal solid waste: '#91ba41'
#     municipal solid waste transport: '#7fa32e'
#     solid biomass import: '#d5ca8d'
#     solid biomass transport: '#baa741'
#     solid biomass for industry: '#7a6d26'
#     solid biomass for industry CC: '#47411c'
#     solid biomass for industry co2 from atmosphere: '#736412'
#     solid biomass for industry co2 to stored: '#47411c'
#     urban central solid biomass CHP: '#9d9042'
#     urban central solid biomass CHP CC: '#6c5d28'
#     biomass boiler: '#8A9A5B'
#     residential rural biomass boiler: '#a1a066'
#     residential urban decentral biomass boiler: '#b0b87b'
#     services rural biomass boiler: '#c6cf98'
#     services urban decentral biomass boiler: '#dde5b5'
#     biomass to liquid: '#32CD32'
#     biomass to liquid CC: '#2EB82E'
#     unsustainable solid biomass: '#998622'
#     unsustainable bioliquids: '#32CD32'
#     electrobiofuels: 'red'
#     BioSNG: '#123456'
#     BioSNG CC: '#0F3554'
#     solid biomass to hydrogen: '#654321'
#     # power transmission
#     lines: '#6c9459'
#     transmission lines: '#6c9459'
#     electricity distribution grid: '#97ad8c'
#     low voltage: '#97ad8c'
#     # electricity demand
#     Electric load: '#110d63'
#     electric demand: '#110d63'
#     electricity: '#110d63'
#     industry electricity: '#2d2a66'
#     industry new electricity: '#2d2a66'
#     agriculture electricity: '#494778'
#     # battery + EVs
#     battery: '#ace37f'
#     battery storage: '#ace37f'
#     battery charger: '#88a75b'
#     battery discharger: '#5d4e29'
#     home battery: '#80c944'
#     home battery storage: '#80c944'
#     home battery charger: '#5e8032'
#     home battery discharger: '#3c5221'
#     BEV charger: '#baf238'
#     V2G: '#e5ffa8'
#     land transport EV: '#baf238'
#     land transport demand: '#38baf2'
#     EV battery: '#baf238'
#     # hot water storage
#     water tanks: '#e69487'
#     residential rural water tanks: '#f7b7a3'
#     services rural water tanks: '#f3afa3'
#     residential urban decentral water tanks: '#f2b2a3'
#     services urban decentral water tanks: '#f1b4a4'
#     urban central water tanks: '#e9977d'
#     hot water storage: '#e69487'
#     hot water charging: '#e8998b'
#     urban central water tanks charger: '#b57a67'
#     residential rural water tanks charger: '#b4887c'
#     residential urban decentral water tanks charger: '#b39995'
#     services rural water tanks charger: '#b3abb0'
#     services urban decentral water tanks charger: '#b3becc'
#     hot water discharging: '#e99c8e'
#     urban central water tanks discharger: '#b9816e'
#     residential rural water tanks discharger: '#ba9685'
#     residential urban decentral water tanks discharger: '#baac9e'
#     services rural water tanks discharger: '#bbc2b8'
#     services urban decentral water tanks discharger: '#bdd8d3'
#     # heat demand
#     Heat load: '#cc1f1f'
#     heat: '#cc1f1f'
#     heat vent: '#aa3344'
#     heat demand: '#cc1f1f'
#     rural heat: '#ff5c5c'
#     residential rural heat: '#ff7c7c'
#     services rural heat: '#ff9c9c'
#     central heat: '#cc1f1f'
#     urban central heat: '#d15959'
#     urban central heat vent: '#a74747'
#     decentral heat: '#750606'
#     residential urban decentral heat: '#a33c3c'
#     services urban decentral heat: '#cc1f1f'
#     low-temperature heat for industry: '#8f2727'
#     process heat: '#ff0000'
#     agriculture heat: '#d9a5a5'
#     # heat supply
#     heat pumps: '#2fb537'
#     heat pump: '#2fb537'
#     air heat pump: '#36eb41'
#     residential urban decentral air heat pump: '#48f74f'
#     services urban decentral air heat pump: '#5af95d'
#     services rural air heat pump: '#5af95d'
#     urban central air heat pump: '#6cfb6b'
#     urban central geothermal heat pump: '#4f2144'
#     geothermal heat pump: '#4f2144'
#     geothermal heat direct utilisation: '#ba91b1'
#     ground heat pump: '#2fb537'
#     residential rural ground heat pump: '#4f2144'
#     residential rural air heat pump: '#48f74f'
#     services rural ground heat pump: '#5af95d'
#     Ambient: '#98eb9d'
#     CHP: '#8a5751'
#     urban central gas CHP: '#8d5e56'
#     CHP CC: '#634643'
#     urban central gas CHP CC: '#6e4e4c'
#     CHP heat: '#8a5751'
#     CHP electric: '#8a5751'
#     district heating: '#e8beac'
#     resistive heater: '#d8f9b8'
#     residential rural resistive heater: '#bef5b5'
#     residential urban decentral resistive heater: '#b2f1a9'
#     services rural resistive heater: '#a5ed9d'
#     services urban decentral resistive heater: '#98e991'
#     urban central resistive heater: '#8cdf85'
#     retrofitting: '#8487e8'
#     building retrofitting: '#8487e8'
#     # hydrogen
#     H2 for industry: "#f073da"
#     H2 for shipping: "#ebaee0"
#     H2: '#bf13a0'
#     hydrogen: '#bf13a0'
#     retrofitted H2 boiler: '#e5a0d9'
#     SMR: '#870c71'
#     SMR CC: '#4f1745'
#     H2 liquefaction: '#d647bd'
#     hydrogen storage: '#bf13a0'
#     H2 Store: '#bf13a0'
#     H2 storage: '#bf13a0'
#     land transport fuel cell: '#6b3161'
#     H2 pipeline: '#f081dc'
#     H2 pipeline retrofitted: '#ba99b5'
#     H2 Fuel Cell: '#c251ae'
#     H2 fuel cell: '#c251ae'
#     H2 turbine: '#991f83'
#     H2 Electrolysis: '#ff29d9'
#     H2 electrolysis: '#ff29d9'
#     # ammonia
#     NH3: '#46caf0'
#     ammonia: '#46caf0'
#     ammonia store: '#00ace0'
#     ammonia cracker: '#87d0e6'
#     Haber-Bosch: '#076987'
#     # syngas
#     Sabatier: '#9850ad'
#     methanation: '#c44ce6'
#     methane: '#c44ce6'
#     # synfuels
#     Fischer-Tropsch: '#25c49a'
#     liquid: '#25c49a'
#     kerosene for aviation: '#a1ffe6'
#     naphtha for industry: '#57ebc4'
#     methanol-to-kerosene: '#C98468'
#     methanol-to-olefins/aromatics: '#FFA07A'
#     Methanol steam reforming: '#FFBF00'
#     Methanol steam reforming CC: '#A2EA8A'
#     methanolisation: '#00FFBF'
#     biomass-to-methanol: '#EAD28A'
#     biomass-to-methanol CC: '#EADBAD'
#     e-biomethanol: '#ffd966'
#     e-bioSNG: '#66ffcc'
#     allam methanol: '#B98F76'
#     CCGT methanol: '#B98F76'
#     CCGT methanol CC: '#a87f69'
#     OCGT methanol: '#B98F76'
#     methanol: '#FF7B00'
#     methanol transport: '#FF7B00'
#     shipping methanol: '#468c8b'
#     industry methanol: '#468c8b'
#     # co2
#     CC: '#f29dae'
#     CCS: '#f29dae'
#     CO2 sequestration: '#f29dae'
#     DAC: '#ff5270'
#     co2 stored: '#f2385a'
#     co2 sequestered: '#f2682f'
#     co2: '#f29dae'
#     co2 vent: '#ffd4dc'
#     CO2 pipeline: '#f5627f'
#     # emissions
#     process emissions CC: '#000000'
#     process emissions: '#222222'
#     process emissions to stored: '#444444'
#     process emissions to atmosphere: '#888888'
#     oil emissions: '#aaaaaa'
#     shipping oil emissions: "#555555"
#     shipping methanol emissions: '#666666'
#     land transport oil emissions: '#777777'
#     agriculture machinery oil emissions: '#333333'
#     # other
#     shipping: '#03a2ff'
#     power-to-heat: '#2fb537'
#     power-to-gas: '#c44ce6'
#     power-to-H2: '#ff29d9'
#     power-to-liquid: '#25c49a'
#     gas-to-power/heat: '#ee8340'
#     waste: '#e3d37d'
#     other: '#000000'
#     geothermal: '#ba91b1'
#     geothermal heat: '#ba91b1'
#     geothermal district heat: '#d19D00'
#     geothermal organic rankine cycle: '#ffbf00'
#     AC: "#70af1d"
#     AC-AC: "#70af1d"
#     AC line: "#70af1d"
#     links: "#8a1caf"
#     HVDC links: "#8a1caf"
#     DC: "#8a1caf"
#     DC-DC: "#8a1caf"
#     DC link: "#8a1caf"
#     load: "#dd2e23"
#     waste CHP: '#e3d37d'
#     waste CHP CC: '#e3d3ff'
#     HVC to air: 'k'
